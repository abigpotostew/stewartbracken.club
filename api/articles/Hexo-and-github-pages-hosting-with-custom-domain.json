{"title":"Guide: Free Encrypted Blog with a Custom Domain","slug":"Hexo-and-github-pages-hosting-with-custom-domain","date":"2019-05-26T01:27:54.000Z","updated":"2020-10-20T17:30:33.440Z","comments":true,"path":"api/articles/Hexo-and-github-pages-hosting-with-custom-domain.json","excerpt":null,"covers":null,"content":"<p>Here’s a guide to setup your own blog like mine with free hosting and a custom domain name. Github Pages also provide free HTTPS certificate for your blog as a very nice bonus.</p>\n<h3 id=\"You-will-need\"><a href=\"#You-will-need\" class=\"headerlink\" title=\"You will need:\"></a>You will need:</h3><ul>\n<li>Computer with terminal access (I’m using a mac)</li>\n<li>(optional) Custom domain (more on this later)</li>\n<li>Github.com account</li>\n<li>A couple hours to setup this up</li>\n</ul>\n<h3 id=\"Step-1-optional-Purchase-a-custom-domain\"><a href=\"#Step-1-optional-Purchase-a-custom-domain\" class=\"headerlink\" title=\"Step 1 - (optional) Purchase a custom domain\"></a>Step 1 - (optional) Purchase a custom domain</h3><p>If you want your blog to be hosted at it’s own domain name such as <code>example.com</code> or <code>stewartbracken.club</code> then you need to purchase a domain. I got mine from <a href=\"www.domains.google/%E2%80%8E\">Google Domains</a>, but there are many other domain providers on the web. Domains range from $9-$100+ per year depending on the top level domain.</p>\n<p>Purchase your domain now or use the github.io URL provided by github. You can always add the custom domain later.</p>\n<h3 id=\"Step-2-Configure-a-New-Github-Repo\"><a href=\"#Step-2-Configure-a-New-Github-Repo\" class=\"headerlink\" title=\"Step 2 - Configure a New Github Repo\"></a>Step 2 - Configure a New Github Repo</h3><p>Log in to <a href=\"github.com\">GitHub.com</a> and create a new repository with default settings. If using a custom domain, then the repo name doesn’t matter. If you’re using the github.io URL for your blog then choose a name that you want to be in your blog URL.</p>\n<p>Add your SSH key to your Github account by opening the Account settings &gt; SSH and GPG keys &gt; New SSH key. Paste in the contents of <code>~/.ssh/id_rsa.pub</code> in the text box. If you don’t have an SSH key follow the <a href=\"https://help.github.com/en/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\">first section here</a> to generate a new one.</p>\n<h3 id=\"Step-3-Create-a-Hexo-Blog\"><a href=\"#Step-3-Create-a-Hexo-Blog\" class=\"headerlink\" title=\"Step 3 - Create a Hexo Blog\"></a>Step 3 - Create a Hexo Blog</h3><ol>\n<li>Open <code>Terminal.app</code> on a mac or equivalent.</li>\n<li>Clone your git repository <code>git clone https://github.com/[your github username]/[your repo name].git</code></li>\n<li><code>cd [your repo name]</code></li>\n<li>Create a blog directory within the repository: <code>mkdir [your repo name]</code></li>\n<li>Install Hexo <code>npm install -g hexo-cli</code></li>\n<li>Create a new hexo blog: <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init [your repo name]</span><br><span class=\"line\">cd [your repo name]</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure></li>\n<li>Install necessary plugins:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">npm install hexo-server --save</span><br><span class=\"line\">npm install --save hexo-admin</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ol>\n<h3 id=\"Step-4-Configure-Your-Blog\"><a href=\"#Step-4-Configure-Your-Blog\" class=\"headerlink\" title=\"Step 4 - Configure Your Blog\"></a>Step 4 - Configure Your Blog</h3><p>Open <code>_config.yml</code> in the blog directory with a text editor and override the <code>deploy</code> config block the following settings:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: git@github.com:[your github username]&#x2F;[your repo name].club.git</span><br><span class=\"line\">  branch: gh-pages</span><br><span class=\"line\">  message: &quot;Site updated: &#123;&#123; now(&#39;YYYY-MM-DD HH:mm:ss&#39;) &#125;&#125;&quot;</span><br><span class=\"line\">  name: [your github username]</span><br><span class=\"line\">  email: [your github email]</span><br></pre></td></tr></table></figure>\n\n<p>You can also modify any of the other settings here as your see fit, or later. Next we will deploy the blog to github.</p>\n<h3 id=\"Step-5-Deploy-the-Blog\"><a href=\"#Step-5-Deploy-the-Blog\" class=\"headerlink\" title=\"Step 5 - Deploy the Blog\"></a>Step 5 - Deploy the Blog</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>Generate creates the static files for your blog. Deploy pushes the blog files to the <code>gh-pages</code> branch in your repository. Run these two commands whenever you want to update your blog on the internet.</p>\n<h3 id=\"Step-6-Configure-Github-Pages-Hosting\"><a href=\"#Step-6-Configure-Github-Pages-Hosting\" class=\"headerlink\" title=\"Step 6 - Configure Github Pages Hosting\"></a>Step 6 - Configure Github Pages Hosting</h3><p>Open Github.com and navigate to your repo settings. Under Options &gt; GitHub Pages &gt; Source select <code>gh-pages branch</code></p>\n<p>At this point, your blog is viewable. Open the link shown right above the GitHub Pages settings to view it.</p>\n<h3 id=\"Step-7-Configure-the-Domain\"><a href=\"#Step-7-Configure-the-Domain\" class=\"headerlink\" title=\"Step 7 - Configure the Domain\"></a>Step 7 - Configure the Domain</h3><p>In your local blog’s <code>_config.yml</code>, set the <code>url</code> field to your blog URL. If using the github pages url, ie. [github username].github.io/[repository name]/, set it here. If using a custom domain set that in the <code>url</code> field instead, ie <code>example.com</code> or <code>stewartbracken.club</code> for my own domain.</p>\n<p>If you’re not using a custom domain, skip ahead to step 8.</p>\n<p>If you are using a custom domain, enter your domain in the Custom Domain field on the repository settings under GitHub Pages. For reference, mine contains <code>stewartbracken.club</code>.</p>\n<p>Next, create a new text file in the blog’s <code>source</code> directory called <code>CNAME</code> with contents containing your custom domain name. For example my CNAME file contains:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stewartbracken.club</span><br></pre></td></tr></table></figure>\n\n<p>Generate and deploy your blog again with</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>Configure your Custom domain DNS to point to the github page <a href=\"https://help.github.com/en/articles/setting-up-an-apex-domain\">https://help.github.com/en/articles/setting-up-an-apex-domain</a>. To summarize these instructions, you need to create a type <code>A</code> DNS record that points to four github IPv4 addresses:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">185.199.108.153</span><br><span class=\"line\">185.199.109.153</span><br><span class=\"line\">185.199.110.153</span><br><span class=\"line\">185.199.111.153</span><br></pre></td></tr></table></figure>\n\n<p>To verify this is working you can run a dig command:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dig +noall +answer [your custom domain]</span><br></pre></td></tr></table></figure>\n<p>The four IPs you configured should show up in the dig response.</p>\n<p>Now go back to your Github repository setting and verify the custom domain settings have taken. You may need to re-enter the custom domain.</p>\n<p>At this point you can select <code>Enforce HTTPS</code> to tell Github to create your own certificate for your site. This will allow web browsers to use encrypted traffic which is a modern requirement to be listed in search results these days. The checkbox might be unavailable for up to 24 hours. For me, I was able to select it after a few minutes.</p>\n<h3 id=\"Step-8-Push-Your-Blog-Source-to-Github\"><a href=\"#Step-8-Push-Your-Blog-Source-to-Github\" class=\"headerlink\" title=\"Step 8 - Push Your Blog Source to Github\"></a>Step 8 - Push Your Blog Source to Github</h3><p>Now you can store your blog source code to the same repository with the following commands.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd [repository root directory]</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -am &quot;initial commit&quot;</span><br><span class=\"line\">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;[your github username]&#x2F;[your repository name].git</span><br><span class=\"line\">git push --set-upstream origin master</span><br></pre></td></tr></table></figure>\n<p>The git commands should be invoked in the root directory of the repository.</p>\n<p>Now you have a clean way to store your blog’s source code and host the blog from the same repo. If you ever need to update your blog from a different computer, you can clone the master branch of this repository and update it it. You will need to install the hexo software and plugins again from step 3 if you don’t commit these.</p>\n<h3 id=\"Step-9-Blog-Maintainence\"><a href=\"#Step-9-Blog-Maintainence\" class=\"headerlink\" title=\"Step 9 - Blog Maintainence\"></a>Step 9 - Blog Maintainence</h3><p>This concludes the setup of your blog. The remaining instructions are the necessary terminal commands to configure and maintain your blog going forward.</p>\n<p>To add new pages and blog posts you can either edit the blog directly on the filesystem or you can use the hexo-admin plugin to edit your blog with a GUI:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd [your blog directory]</span><br><span class=\"line\">&amp;hexo server -d</span><br><span class=\"line\">open http:&#x2F;&#x2F;localhost:4000&#x2F;admin&#x2F;</span><br></pre></td></tr></table></figure>\n<p> You can view the unpublished changes to your blog by opening this URL in a browser: <a href=\"http://localhost:4000/\">http://localhost:4000/</a></p>\n<p> After you’re satisfied with the changes, redeploy the blog with the familiar commands:<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p> Now feel free to change the blog theme and any other settings.</p>\n<p> And finally, when you’re done for the day, save the blog’s source code with:<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd [repository root directory]</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -am &quot;blog updates&quot;</span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h3><p>I hope this guide will help you setup your own website. Hexo is very good and flexible software.</p>\n","more":"<p>Here’s a guide to setup your own blog like mine with free hosting and a custom domain name. Github Pages also provide free HTTPS certificate for your blog as a very nice bonus.</p>\n<h3 id=\"You-will-need\"><a href=\"#You-will-need\" class=\"headerlink\" title=\"You will need:\"></a>You will need:</h3><ul>\n<li>Computer with terminal access (I’m using a mac)</li>\n<li>(optional) Custom domain (more on this later)</li>\n<li>Github.com account</li>\n<li>A couple hours to setup this up</li>\n</ul>\n<h3 id=\"Step-1-optional-Purchase-a-custom-domain\"><a href=\"#Step-1-optional-Purchase-a-custom-domain\" class=\"headerlink\" title=\"Step 1 - (optional) Purchase a custom domain\"></a>Step 1 - (optional) Purchase a custom domain</h3><p>If you want your blog to be hosted at it’s own domain name such as <code>example.com</code> or <code>stewartbracken.club</code> then you need to purchase a domain. I got mine from <a href=\"www.domains.google/%E2%80%8E\">Google Domains</a>, but there are many other domain providers on the web. Domains range from $9-$100+ per year depending on the top level domain.</p>\n<p>Purchase your domain now or use the github.io URL provided by github. You can always add the custom domain later.</p>\n<h3 id=\"Step-2-Configure-a-New-Github-Repo\"><a href=\"#Step-2-Configure-a-New-Github-Repo\" class=\"headerlink\" title=\"Step 2 - Configure a New Github Repo\"></a>Step 2 - Configure a New Github Repo</h3><p>Log in to <a href=\"github.com\">GitHub.com</a> and create a new repository with default settings. If using a custom domain, then the repo name doesn’t matter. If you’re using the github.io URL for your blog then choose a name that you want to be in your blog URL.</p>\n<p>Add your SSH key to your Github account by opening the Account settings &gt; SSH and GPG keys &gt; New SSH key. Paste in the contents of <code>~/.ssh/id_rsa.pub</code> in the text box. If you don’t have an SSH key follow the <a href=\"https://help.github.com/en/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\">first section here</a> to generate a new one.</p>\n<h3 id=\"Step-3-Create-a-Hexo-Blog\"><a href=\"#Step-3-Create-a-Hexo-Blog\" class=\"headerlink\" title=\"Step 3 - Create a Hexo Blog\"></a>Step 3 - Create a Hexo Blog</h3><ol>\n<li>Open <code>Terminal.app</code> on a mac or equivalent.</li>\n<li>Clone your git repository <code>git clone https://github.com/[your github username]/[your repo name].git</code></li>\n<li><code>cd [your repo name]</code></li>\n<li>Create a blog directory within the repository: <code>mkdir [your repo name]</code></li>\n<li>Install Hexo <code>npm install -g hexo-cli</code></li>\n<li>Create a new hexo blog: <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init [your repo name]</span><br><span class=\"line\">cd [your repo name]</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure></li>\n<li>Install necessary plugins:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">npm install hexo-server --save</span><br><span class=\"line\">npm install --save hexo-admin</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ol>\n<h3 id=\"Step-4-Configure-Your-Blog\"><a href=\"#Step-4-Configure-Your-Blog\" class=\"headerlink\" title=\"Step 4 - Configure Your Blog\"></a>Step 4 - Configure Your Blog</h3><p>Open <code>_config.yml</code> in the blog directory with a text editor and override the <code>deploy</code> config block the following settings:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: git@github.com:[your github username]&#x2F;[your repo name].club.git</span><br><span class=\"line\">  branch: gh-pages</span><br><span class=\"line\">  message: &quot;Site updated: &#123;&#123; now(&#39;YYYY-MM-DD HH:mm:ss&#39;) &#125;&#125;&quot;</span><br><span class=\"line\">  name: [your github username]</span><br><span class=\"line\">  email: [your github email]</span><br></pre></td></tr></table></figure>\n\n<p>You can also modify any of the other settings here as your see fit, or later. Next we will deploy the blog to github.</p>\n<h3 id=\"Step-5-Deploy-the-Blog\"><a href=\"#Step-5-Deploy-the-Blog\" class=\"headerlink\" title=\"Step 5 - Deploy the Blog\"></a>Step 5 - Deploy the Blog</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>Generate creates the static files for your blog. Deploy pushes the blog files to the <code>gh-pages</code> branch in your repository. Run these two commands whenever you want to update your blog on the internet.</p>\n<h3 id=\"Step-6-Configure-Github-Pages-Hosting\"><a href=\"#Step-6-Configure-Github-Pages-Hosting\" class=\"headerlink\" title=\"Step 6 - Configure Github Pages Hosting\"></a>Step 6 - Configure Github Pages Hosting</h3><p>Open Github.com and navigate to your repo settings. Under Options &gt; GitHub Pages &gt; Source select <code>gh-pages branch</code></p>\n<p>At this point, your blog is viewable. Open the link shown right above the GitHub Pages settings to view it.</p>\n<h3 id=\"Step-7-Configure-the-Domain\"><a href=\"#Step-7-Configure-the-Domain\" class=\"headerlink\" title=\"Step 7 - Configure the Domain\"></a>Step 7 - Configure the Domain</h3><p>In your local blog’s <code>_config.yml</code>, set the <code>url</code> field to your blog URL. If using the github pages url, ie. [github username].github.io/[repository name]/, set it here. If using a custom domain set that in the <code>url</code> field instead, ie <code>example.com</code> or <code>stewartbracken.club</code> for my own domain.</p>\n<p>If you’re not using a custom domain, skip ahead to step 8.</p>\n<p>If you are using a custom domain, enter your domain in the Custom Domain field on the repository settings under GitHub Pages. For reference, mine contains <code>stewartbracken.club</code>.</p>\n<p>Next, create a new text file in the blog’s <code>source</code> directory called <code>CNAME</code> with contents containing your custom domain name. For example my CNAME file contains:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stewartbracken.club</span><br></pre></td></tr></table></figure>\n\n<p>Generate and deploy your blog again with</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>Configure your Custom domain DNS to point to the github page <a href=\"https://help.github.com/en/articles/setting-up-an-apex-domain\">https://help.github.com/en/articles/setting-up-an-apex-domain</a>. To summarize these instructions, you need to create a type <code>A</code> DNS record that points to four github IPv4 addresses:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">185.199.108.153</span><br><span class=\"line\">185.199.109.153</span><br><span class=\"line\">185.199.110.153</span><br><span class=\"line\">185.199.111.153</span><br></pre></td></tr></table></figure>\n\n<p>To verify this is working you can run a dig command:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dig +noall +answer [your custom domain]</span><br></pre></td></tr></table></figure>\n<p>The four IPs you configured should show up in the dig response.</p>\n<p>Now go back to your Github repository setting and verify the custom domain settings have taken. You may need to re-enter the custom domain.</p>\n<p>At this point you can select <code>Enforce HTTPS</code> to tell Github to create your own certificate for your site. This will allow web browsers to use encrypted traffic which is a modern requirement to be listed in search results these days. The checkbox might be unavailable for up to 24 hours. For me, I was able to select it after a few minutes.</p>\n<h3 id=\"Step-8-Push-Your-Blog-Source-to-Github\"><a href=\"#Step-8-Push-Your-Blog-Source-to-Github\" class=\"headerlink\" title=\"Step 8 - Push Your Blog Source to Github\"></a>Step 8 - Push Your Blog Source to Github</h3><p>Now you can store your blog source code to the same repository with the following commands.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd [repository root directory]</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -am &quot;initial commit&quot;</span><br><span class=\"line\">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;[your github username]&#x2F;[your repository name].git</span><br><span class=\"line\">git push --set-upstream origin master</span><br></pre></td></tr></table></figure>\n<p>The git commands should be invoked in the root directory of the repository.</p>\n<p>Now you have a clean way to store your blog’s source code and host the blog from the same repo. If you ever need to update your blog from a different computer, you can clone the master branch of this repository and update it it. You will need to install the hexo software and plugins again from step 3 if you don’t commit these.</p>\n<h3 id=\"Step-9-Blog-Maintainence\"><a href=\"#Step-9-Blog-Maintainence\" class=\"headerlink\" title=\"Step 9 - Blog Maintainence\"></a>Step 9 - Blog Maintainence</h3><p>This concludes the setup of your blog. The remaining instructions are the necessary terminal commands to configure and maintain your blog going forward.</p>\n<p>To add new pages and blog posts you can either edit the blog directly on the filesystem or you can use the hexo-admin plugin to edit your blog with a GUI:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd [your blog directory]</span><br><span class=\"line\">&amp;hexo server -d</span><br><span class=\"line\">open http:&#x2F;&#x2F;localhost:4000&#x2F;admin&#x2F;</span><br></pre></td></tr></table></figure>\n<p> You can view the unpublished changes to your blog by opening this URL in a browser: <a href=\"http://localhost:4000/\">http://localhost:4000/</a></p>\n<p> After you’re satisfied with the changes, redeploy the blog with the familiar commands:<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p> Now feel free to change the blog theme and any other settings.</p>\n<p> And finally, when you’re done for the day, save the blog’s source code with:<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd [repository root directory]</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -am &quot;blog updates&quot;</span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h3><p>I hope this guide will help you setup your own website. Hexo is very good and flexible software.</p>\n","categories":[],"tags":[]}